package tokobuku.view;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import tokobuku.SistemTokoBuku;
import tokobuku.impl.KategoriImpl;
import tokobuku.model.Kategori;

/**
 *
 * @author Rosyid Iz
 */
public class KategoriPanelView extends javax.swing.JPanel {

    private final KategoriImpl kategoriImpl = DashboardPegawaiView.getInstance().kategoriImpl;
    private List<Kategori> listKategoris;
    private int totalKategori;
    private final Thread thread;
    private final List<Boolean> click = new ArrayList<>();
    private final List<PanelListKategori> panelList = new ArrayList<>();
    private boolean isEditable = false;

    private int selected;

    /**
     * Creates new form KategoriPanelView
     */
    public KategoriPanelView() {
        initComponents();
        thread = new Thread("thread-kategori") {
            @Override
            public void run() {
                loadDataKategori();
                setListKategori();
            }
        };
        thread.start();
    }

    private synchronized void loadDataKategori() {
        try {
            kategoriImpl.listKategoris = new ArrayList<>();
            kategoriImpl.load();
        } catch (SQLException ex) {
            SistemTokoBuku.logger.warning(ex.getMessage());
        }
        listKategoris = kategoriImpl.listKategoris;
        totalKategori = listKategoris.size();
    }

    private synchronized void setListKategori() {
        if (!click.isEmpty()) {
            click.clear();
        }
        if (!panelList.isEmpty()) {
            panelList.clear();
        }
        panelListKategori.removeAll();
        refreshPanel(0);
        for (int i = 0; i < totalKategori; i++) {
            click.add(false);
            PanelListKategori panel = new PanelListKategori(listKategoris.get(i), i + 1);
            panel.apply(panelListKategori);
            panelList.add(panel);
        }

        SwingUtilities.updateComponentTreeUI(scrollPanelKategori);
    }

    private synchronized void refreshPanel(int addItem) {
        int rows = totalKategori + addItem;
        float height = (rows * 40);
        panelListKategori.setLayout(new GridLayout(rows, 1, 0, 0));
        if (rows < 8) {
            scrollPanelKategori.setPreferredSize(new Dimension(540, (int) height + 4));
            scrollPanelKategori.getVerticalScrollBar().setUnitIncrement(1);
        } else {
            scrollPanelKategori.setPreferredSize(new Dimension(540, 290));
            scrollPanelKategori.getVerticalScrollBar().setUnitIncrement(16);
        }
        panelListKategori.setPreferredSize(new Dimension(540, (int) height));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanelKategori = new javax.swing.JScrollPane();
        panelListKategori = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        tf_rak = new javax.swing.JTextField();
        tf_nomor = new javax.swing.JTextField();
        tf_kode = new javax.swing.JTextField();
        tf_namakategori = new javax.swing.JTextField();
        footerPanel = new javax.swing.JPanel();
        labelJumlahBuku = new javax.swing.JLabel();
        total_buku = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        labelDaftarKategori = new javax.swing.JLabel();
        btnHapusKategori = new javax.swing.JButton();
        btnTambahKategori = new javax.swing.JButton();
        btnEditKategori = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setPreferredSize(new java.awt.Dimension(750, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scrollPanelKategori.setBackground(new java.awt.Color(51, 51, 51));
        scrollPanelKategori.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        scrollPanelKategori.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPanelKategori.setPreferredSize(new java.awt.Dimension(540, 290));

        panelListKategori.setBackground(new java.awt.Color(45, 45, 45));
        panelListKategori.setPreferredSize(new java.awt.Dimension(540, 290));
        panelListKategori.setLayout(new java.awt.GridLayout());
        scrollPanelKategori.setViewportView(panelListKategori);

        add(scrollPanelKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 55, -1, -1));

        headerPanel.setBackground(new java.awt.Color(65, 65, 65));
        headerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        headerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tf_rak.setEditable(false);
        tf_rak.setBackground(new java.awt.Color(51, 51, 51));
        tf_rak.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        tf_rak.setForeground(new java.awt.Color(255, 255, 255));
        tf_rak.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_rak.setText("RAK");
        tf_rak.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_rak.setSelectionColor(new java.awt.Color(51, 51, 51));
        headerPanel.add(tf_rak, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 5, 85, 30));

        tf_nomor.setEditable(false);
        tf_nomor.setBackground(new java.awt.Color(51, 51, 51));
        tf_nomor.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        tf_nomor.setForeground(new java.awt.Color(255, 255, 255));
        tf_nomor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_nomor.setText("NO");
        tf_nomor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_nomor.setSelectionColor(new java.awt.Color(51, 51, 51));
        headerPanel.add(tf_nomor, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 40, 30));

        tf_kode.setEditable(false);
        tf_kode.setBackground(new java.awt.Color(51, 51, 51));
        tf_kode.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        tf_kode.setForeground(new java.awt.Color(255, 255, 255));
        tf_kode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_kode.setText("KODE");
        tf_kode.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_kode.setSelectionColor(new java.awt.Color(51, 51, 51));
        headerPanel.add(tf_kode, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 5, 160, 30));

        tf_namakategori.setEditable(false);
        tf_namakategori.setBackground(new java.awt.Color(51, 51, 51));
        tf_namakategori.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        tf_namakategori.setForeground(new java.awt.Color(255, 255, 255));
        tf_namakategori.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tf_namakategori.setText("NAMA KATEGORI");
        tf_namakategori.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tf_namakategori.setSelectionColor(new java.awt.Color(51, 51, 51));
        headerPanel.add(tf_namakategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 5, 230, 30));

        add(headerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 540, 40));

        footerPanel.setBackground(new java.awt.Color(65, 65, 65));
        footerPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        footerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelJumlahBuku.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        labelJumlahBuku.setForeground(new java.awt.Color(255, 255, 153));
        labelJumlahBuku.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelJumlahBuku.setText("Jumlah Buku (per kategori) :");
        footerPanel.add(labelJumlahBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 0, 200, 40));
        labelJumlahBuku.setVisible(false);

        total_buku.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        total_buku.setForeground(new java.awt.Color(153, 255, 153));
        total_buku.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        total_buku.setText("total_buku");
        footerPanel.add(total_buku, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 160, 40));
        total_buku.setVisible(false);

        add(footerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 350, 540, 40));

        leftPanel.setBackground(new java.awt.Color(60, 60, 60));
        leftPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        leftPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelDaftarKategori.setFont(new java.awt.Font("Bahnschrift", 0, 18)); // NOI18N
        labelDaftarKategori.setForeground(new java.awt.Color(255, 255, 255));
        labelDaftarKategori.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDaftarKategori.setText("<html><center>DAFTAR<br>KATEGORI</center></html>");
        labelDaftarKategori.setToolTipText("");
        leftPanel.add(labelDaftarKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 185, 70));

        btnHapusKategori.setBackground(new java.awt.Color(40, 40, 40));
        btnHapusKategori.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnHapusKategori.setForeground(new java.awt.Color(255, 153, 153));
        btnHapusKategori.setText("HAPUS");
        btnHapusKategori.setBorder(null);
        btnHapusKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusKategoriActionPerformed(evt);
            }
        });
        leftPanel.add(btnHapusKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 165, 40));
        btnHapusKategori.setVisible(false);

        btnTambahKategori.setBackground(new java.awt.Color(51, 200, 51));
        btnTambahKategori.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnTambahKategori.setText("TAMBAH");
        btnTambahKategori.setBorder(null);
        btnTambahKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahKategoriActionPerformed(evt);
            }
        });
        leftPanel.add(btnTambahKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 165, 40));

        btnEditKategori.setBackground(new java.awt.Color(0, 102, 204));
        btnEditKategori.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
        btnEditKategori.setForeground(new java.awt.Color(255, 255, 255));
        btnEditKategori.setText("EDIT");
        btnEditKategori.setBorder(null);
        btnEditKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditKategoriActionPerformed(evt);
            }
        });
        leftPanel.add(btnEditKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 165, 40));
        btnEditKategori.setVisible(false);

        add(leftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 185, 380));
    }// </editor-fold>//GEN-END:initComponents

    private Kategori ktgr = new Kategori();

    private void btnEditKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditKategoriActionPerformed
        if (btnEditKategori.getText().equalsIgnoreCase("edit")) {
            isEditable = true;
            btnHapusKategori.setText("BATAL");
            btnEditKategori.setText("SIMPAN");
            panelList.get(selected - 1).setEditable(isEditable);
        } else if (btnEditKategori.getText().equalsIgnoreCase("simpan")) {
            isEditable = false;
            btnEditKategori.setText("EDIT");
            btnHapusKategori.setText("HAPUS");
            panelList.get(selected - 1).setEditable(isEditable);
            panelList.get(selected - 1).saveData();
        } else if (btnEditKategori.getText().equalsIgnoreCase("tambahkan")) {
            CustomJPanelView jOpt = new CustomJPanelView();
            jOpt.setPanel("black");

            PanelListKategori newPanel = panelList.get(listKategoris.size());
            ktgr.setKode_kategori(Integer.parseInt(newPanel.tf_kode.getText()));
            ktgr.setNama_kategori(newPanel.tf_namakategori.getText());
            ktgr.setRak(newPanel.tf_rak.getText());

            try {
                kategoriImpl.insert(ktgr);
                loadDataKategori();
                setListKategori();
                btnEditKategori.setText("EDIT");
                btnHapusKategori.setText("HAPUS");
                btnEditKategori.setVisible(false);
                btnHapusKategori.setVisible(false);
                btnTambahKategori.setVisible(true);

                DashboardPegawaiView.getInstance().loadDataKategori();
            } catch (SQLException ex) {
                jOpt.displayError(this, "Gagal Menambah Kategori!", "Error");
                SistemTokoBuku.logger.warning(ex.getMessage());
            }

            ktgr = new Kategori();
        }
    }//GEN-LAST:event_btnEditKategoriActionPerformed

    private void btnHapusKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusKategoriActionPerformed
        if (btnHapusKategori.getText().equalsIgnoreCase("hapus")) {
            CustomJPanelView jOpt = new CustomJPanelView();
            jOpt.setPanel("black");
            int aksi = jOpt.displayConfirmDialog(panelListKategori, "Apakah anda yakin ingin \nmenghapus kategori " + listKategoris.get(selected - 1).getNama_kategori() + " ?", "Konfirmasi");
            switch (aksi) {
                case 0: { //yes option
                    try {
                        isEditable = false;
                        panelList.get(selected - 1).setEditable(isEditable);
                        Kategori kategori = listKategoris.get(selected - 1);
                        kategoriImpl.delete(kategori);
                        loadDataKategori();
                        setListKategori();
                        DashboardPegawaiView.getInstance().loadDataKategori();
                        btnEditKategori.setVisible(false);
                        btnHapusKategori.setVisible(false);
                        break;
                    } catch (SQLException ex) {
                        Logger.getLogger(KategoriPanelView.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                default:
                //nothing
            }
            SwingUtilities.updateComponentTreeUI(this);
        } else {
            isEditable = false;
            btnEditKategori.setText("EDIT");
            btnHapusKategori.setText("HAPUS");
            if (btnTambahKategori.isVisible()) {
                panelList.get(selected - 1).setEditable(isEditable);
                panelList.get(selected - 1).cancelSave();
            } else {
                ktgr = new Kategori();
                panelList.get(listKategoris.size()).setEditable(isEditable);
                panelList.remove(panelList.size() - 1);
                loadDataKategori();
                setListKategori();
                btnTambahKategori.setVisible(true);
            }
            btnEditKategori.setVisible(false);
            btnHapusKategori.setVisible(false);
        }
    }//GEN-LAST:event_btnHapusKategoriActionPerformed

    private void btnTambahKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahKategoriActionPerformed
        isEditable = false;
        for (int i = 0; i < click.size(); i++) {
            click.set(i, isEditable);
            panelList.get(i).setEditable(isEditable);
        }

        refreshPanel(1);
        btnEditKategori.setVisible(true);
        btnHapusKategori.setVisible(true);

        click.add(false);
        PanelListKategori panel = new PanelListKategori(ktgr, listKategoris.size() + 1);
        panel.apply(panelListKategori);
        panelList.add(panel);
        panelList.get(listKategoris.size()).setEditable(true);

        btnTambahKategori.setVisible(false);
        btnHapusKategori.setText("BATAL");
        btnEditKategori.setText("TAMBAHKAN");

        SwingUtilities.updateComponentTreeUI(this);
    }//GEN-LAST:event_btnTambahKategoriActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditKategori;
    private javax.swing.JButton btnHapusKategori;
    private javax.swing.JButton btnTambahKategori;
    private javax.swing.JPanel footerPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel labelDaftarKategori;
    private javax.swing.JLabel labelJumlahBuku;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel panelListKategori;
    private javax.swing.JScrollPane scrollPanelKategori;
    private javax.swing.JTextField tf_kode;
    private javax.swing.JTextField tf_namakategori;
    private javax.swing.JTextField tf_nomor;
    private javax.swing.JTextField tf_rak;
    private javax.swing.JLabel total_buku;
    // End of variables declaration//GEN-END:variables

    class PanelListKategori {

        private final Kategori kategori;
        private final int index;
        private final javax.swing.JPanel basePanel = new javax.swing.JPanel();
        private javax.swing.JPanel parentPanel = new javax.swing.JPanel();
        private final javax.swing.JTextField tf_rak = new javax.swing.JTextField();
        private final javax.swing.JTextField tf_nomor = new javax.swing.JTextField();
        private final javax.swing.JTextField tf_kode = new javax.swing.JTextField();
        private final javax.swing.JTextField tf_namakategori = new javax.swing.JTextField();

        public PanelListKategori(Kategori kategori, int index) {
            this.kategori = kategori;
            this.index = index;
            initComponents();
            setTextComponent();
            addListener();
        }

        protected void apply(javax.swing.JPanel panel) {
            parentPanel = panel;
            panel.add(basePanel);
        }

        private void setTextComponent() {
            tf_nomor.setText(String.valueOf(index));
            tf_kode.setText(String.valueOf(kategori.getKode_kategori()));
            tf_namakategori.setText(kategori.getNama_kategori());
            tf_rak.setText(kategori.getRak());
        }

        private void addListener() {
            tf_nomor.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseEntered(MouseEvent e) {
                    if (!isEditable) {
                        if (!click.get(index - 1)) {
                            basePanel.setBackground(new java.awt.Color(0, 132, 174));
                        }
                    }
                }

                @Override
                public void mouseExited(MouseEvent e) {
                    if (!isEditable) {
                        if (!click.get(index - 1)) {
                            basePanel.setBackground(new java.awt.Color(65, 65, 65));
                        }
                    }
                }

                @Override
                public void mouseClicked(MouseEvent e) {
                    int size = listKategoris.size();
                    if (!isEditable) {
                        for (int i = size, j = 1; i > 0; i--, j++) {
                            Component[] comp = parentPanel.getComponents();
                            if (i - 1 <= size && parentPanel.getComponent(size - j).equals(basePanel)) {
                                if (parentPanel.getComponent(size - j).equals(basePanel)) {
                                    if (!click.get(index - 1)) {
                                        selected = index;
                                        basePanel.setBackground(new java.awt.Color(0, 102, 204));
                                        btnTambahKategori.setVisible(false);
                                        btnEditKategori.setVisible(true);
                                        btnHapusKategori.setVisible(true);
                                        try {
                                            total_buku.setText(String.valueOf(kategoriImpl.hitungBuku(kategori.getKode_kategori())));
                                            total_buku.setVisible(true);
                                            labelJumlahBuku.setVisible(true);
                                        } catch (SQLException ex) {
                                            SistemTokoBuku.logger.warning(ex.getMessage());
                                        }
                                        click.set(index - 1, !click.get(index - 1));
                                    } else {
                                        basePanel.setBackground(new java.awt.Color(65, 65, 65));
                                        btnEditKategori.setVisible(false);
                                        btnHapusKategori.setVisible(false);
                                        btnTambahKategori.setVisible(true);
                                        labelJumlahBuku.setVisible(false);
                                        total_buku.setVisible(false);
                                        total_buku.setText("");
                                        click.set(index - 1, !click.get(index - 1));
                                    }
                                }
                            } else {
                                comp[i - 1].setBackground(new java.awt.Color(65, 65, 65));
                                click.set(i - 1, false);
                            }
                        }
                    }
                }
            });
        }

        protected void setEditable(boolean isEditable) {
            tf_kode.setEditable(isEditable);
            tf_namakategori.setEditable(isEditable);
            tf_rak.setEditable(isEditable);
            if (isEditable) {
                tf_kode.setBackground(new java.awt.Color(25, 25, 25));
                tf_namakategori.setBackground(new java.awt.Color(25, 25, 25));
                tf_rak.setBackground(new java.awt.Color(25, 25, 25));
            } else {
                tf_kode.setBackground(new java.awt.Color(51, 51, 51));
                tf_namakategori.setBackground(new java.awt.Color(51, 51, 51));
                tf_rak.setBackground(new java.awt.Color(51, 51, 51));
            }
        }

        protected void saveData() {
            Kategori oldKategori = kategori;
            int kode = Integer.parseInt(tf_kode.getText());
            kategori.setNama_kategori(tf_namakategori.getText());
            kategori.setRak(tf_rak.getText());
            try {
                DashboardPegawaiView.getInstance().kategoriImpl.update(kategori, kode);
            } catch (SQLException ex) {
                SistemTokoBuku.logger.warning(ex.getMessage());
                tf_kode.setText(String.valueOf(oldKategori.getKode_kategori()));
                tf_namakategori.setText(oldKategori.getNama_kategori());
                tf_rak.setText(oldKategori.getRak());
            }
        }

        protected void cancelSave() {
            tf_kode.setText(String.valueOf(kategori.getKode_kategori()));
            tf_namakategori.setText(kategori.getNama_kategori());
            tf_rak.setText(kategori.getRak());
        }

        private void initComponents() {
            basePanel.setBackground(new java.awt.Color(65, 65, 65));
            basePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            basePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            tf_rak.setEditable(false);
            tf_rak.setBackground(new java.awt.Color(51, 51, 51));
            tf_rak.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
            tf_rak.setForeground(new java.awt.Color(255, 255, 255));
            tf_rak.setHorizontalAlignment(javax.swing.JTextField.CENTER);
            tf_rak.setText("RAK");
            tf_rak.setCaretColor(new Color(255, 255, 153));
            tf_rak.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            basePanel.add(tf_rak, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 5, 80, 30));

            tf_nomor.setEditable(false);
            tf_nomor.setBackground(new java.awt.Color(51, 51, 51));
            tf_nomor.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
            tf_nomor.setForeground(new java.awt.Color(255, 255, 255));
            tf_nomor.setHorizontalAlignment(javax.swing.JTextField.CENTER);
            tf_nomor.setText("NO");
            tf_nomor.setCaretColor(new Color(255, 255, 153));
            tf_nomor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            basePanel.add(tf_nomor, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 5, 40, 30));

            tf_kode.setEditable(false);
            tf_kode.setBackground(new java.awt.Color(51, 51, 51));
            tf_kode.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
            tf_kode.setForeground(new java.awt.Color(255, 255, 255));
            tf_kode.setHorizontalAlignment(javax.swing.JTextField.CENTER);
            tf_kode.setText("KODE");
            tf_kode.setCaretColor(new Color(255, 255, 153));
            tf_kode.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            basePanel.add(tf_kode, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 5, 160, 30));

            tf_namakategori.setEditable(false);
            tf_namakategori.setBackground(new java.awt.Color(51, 51, 51));
            tf_namakategori.setFont(new java.awt.Font("Bahnschrift", 0, 14)); // NOI18N
            tf_namakategori.setForeground(new java.awt.Color(255, 255, 255));
            tf_namakategori.setHorizontalAlignment(javax.swing.JTextField.CENTER);
            tf_namakategori.setText("NAMA KATEGORI");
            tf_namakategori.setCaretColor(new Color(255, 255, 153));
            tf_namakategori.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
            basePanel.add(tf_namakategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(215, 5, 230, 30));
        }

    }

}
